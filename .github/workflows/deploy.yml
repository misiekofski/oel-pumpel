name: Deploy to GitHub Pages

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Add permissions for GITHUB_TOKEN
permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  # Deploy job
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '16'
          
      - name: Clean install environment
        run: |
          rm -f package-lock.json
          rm -rf node_modules
          npm cache clean --force
          
      - name: Install dependencies with legacy resolution
        run: |
          npm config set legacy-peer-deps true
          npm install --force --no-audit
          
      - name: Install specific compatible versions
        run: |
          npm install ajv@^6.12.6 ajv-keywords@^3.5.2 --force --no-save
          npm install webpack@^5.88.0 --force --no-save
          npm install mini-css-extract-plugin@^2.7.6 --force --no-save
          
      - name: Configure git
        run: |
          git config --global user.email "action@github.com"
          git config --global user.name "GitHub Action"
          
      - name: Build React app
        env:
          CI: false
          NODE_OPTIONS: "--max-old-space-size=4096"
          SKIP_PREFLIGHT_CHECK: true
          TSC_COMPILE_ON_ERROR: true
          GENERATE_SOURCEMAP: false
        run: |
          export NODE_OPTIONS="--max-old-space-size=4096"
          npm run build || echo "❌ Build failed, but continuing..."
          
      - name: Create fallback build if needed
        run: |
          if [ ! -d "build" ] || [ ! "$(ls -A build 2>/dev/null)" ]; then
            echo "Creating fallback build directory..."
            mkdir -p build
            cp public/index.html build/index.html
            echo "✅ Fallback build created with index.html"
          fi
          
      - name: Check build directory
        run: |
          echo "Checking if build directory exists..."
          ls -la
          echo "Build directory contents:"
          ls -la build/ || echo "❌ Build directory does not exist"
          echo "Looking for index.html:"
          find . -name "index.html" -type f || echo "❌ No index.html found"
          
      - name: Deploy to GitHub Pages
        env:
          CI: false
          NODE_OPTIONS: "--max-old-space-size=4096"
          SKIP_PREFLIGHT_CHECK: true
          TSC_COMPILE_ON_ERROR: true
          GENERATE_SOURCEMAP: false
        run: |
          echo "Running deployment manually..."
          export NODE_OPTIONS="--max-old-space-size=4096"
          npm run build
          echo "Build completed, checking for files..."
          ls -la build/ || echo "❌ Build directory still does not exist after build"
          if [ -d "build" ] && [ "$(ls -A build)" ]; then
            echo "✅ Build directory exists and has files, deploying..."
            npx gh-pages -d build --repo=https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git --user="GitHub Actions <action@github.com>" --message="Deploy React app to GitHub Pages"
          else
            echo "❌ Build directory is empty or missing, cannot deploy"
            exit 1
          fi
